<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2025-05-28 15:20:51              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Admin; use App\Models\Package; use Illuminate\Http\Request; use App\Services\PackageInstaller; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Cache; use Illuminate\Support\Facades\Artisan; use App\Http\Requests\AdminOnlyAccessRequest; use App\Http\Requests\Validations\PackageInstallationRequest; class PackagesController extends Controller { public function index(AdminOnlyAccessRequest $request) { $installables = $this->scanPackages(); $installedPackages = Package::all(); return view("\x61\x64\155\151\156\x2e\160\x61\143\x6b\141\x67\x65\x73\x2e\151\156\144\145\170", compact("\151\x6e\x73\x74\x61\x6c\x6c\x61\142\x6c\x65\163", "\x69\156\x73\x74\141\x6c\154\x65\x64\120\x61\143\153\x61\147\145\163")); } public function upload(AdminOnlyAccessRequest $request) { return view("\141\x64\155\151\156\x2e\160\x61\143\x6b\x61\x67\x65\163\x2e\x5f\165\160\154\x6f\x61\144"); } public function save(AdminOnlyAccessRequest $request) { echo "\x3c\x70\162\x65\76"; print_r($request->all()); echo "\x3c\160\x72\145\76"; exit("\x65\156\x64\41"); } public function initiate(AdminOnlyAccessRequest $request, string $package) { if (!$this->isDemo()) { goto q3BHu; } return back()->with("\x77\141\162\156\x69\x6e\x67", trans("\155\145\x73\163\x61\x67\145\163\x2e\144\x65\155\x6f\x5f\x72\x65\163\x74\x72\x69\143\164\151\157\156")); q3BHu: $installable = $this->scanPackages($package); if (!($installable && Package::where("\x73\x6c\x75\x67", $installable["\163\154\165\x67"])->exists())) { goto I5FqB; } return back()->with("\145\x72\162\x6f\162", trans("\155\x65\x73\163\x61\147\145\x73\x2e\x70\141\143\x6b\141\147\x65\137\151\x6e\163\164\x61\154\154\145\x64\137\141\x6c\x72\x65\x61\144\x79", ["\160\x61\143\153\141\147\x65" => $package])); I5FqB: return view("\141\x64\155\x69\156\56\x70\141\x63\153\141\x67\x65\x73\56\x5f\151\156\x69\x74\151\x61\164\x65", compact("\151\156\x73\x74\x61\154\x6c\141\x62\154\145")); } public function upgrade(AdminOnlyAccessRequest $request, string $package) { if (!$this->isDemo()) { goto M5x2s; } return back()->with("\x77\x61\162\156\x69\x6e\147", trans("\x6d\145\163\163\x61\147\x65\163\x2e\144\145\155\157\x5f\162\145\163\x74\x72\151\143\164\151\157\156")); M5x2s: $installable = $this->scanPackages($package); if ($installable) { goto dQXO6; } return back()->with("\x65\x72\162\x6f\x72", trans("\155\x65\x73\163\x61\x67\145\x73\x2e\160\x61\x63\153\141\147\145\x5f\x6e\x6f\x74\x5f\146\157\165\156\144", ["\160\141\143\x6b\x61\147\145" => $package])); dQXO6: try { $installer = new PackageInstaller($request, $installable); $installer->upgrade(); } catch (\Exception $e) { Log::error($e); return redirect()->route("\x61\x64\155\x69\x6e\x2e\x70\141\x63\153\x61\147\x65\163")->with("\x65\x72\x72\x6f\162", $e->getMessage()); } return redirect()->route("\141\x64\x6d\151\x6e\56\160\x61\x63\x6b\x61\x67\145\x73")->with("\163\x75\x63\143\145\x73\x73", trans("\155\145\163\163\x61\147\x65\x73\56\x70\x61\x63\x6b\x61\x67\x65\x5f\165\160\x67\x72\x61\x64\145\x64\137\163\165\143\x63\x65\163\x73", ["\160\x61\x63\153\141\x67\x65" => $package])); } public function install(PackageInstallationRequest $request, string $package) { if (!$this->isDemo()) { goto Yw4gM; } return back()->with("\167\141\x72\x6e\x69\156\147", trans("\x6d\x65\x73\x73\x61\x67\145\x73\x2e\144\x65\155\x6f\137\162\145\x73\x74\162\x69\x63\x74\151\157\156")); Yw4gM: incevioAutoloadHelpers(getMysqliConnection()); $installable = $this->scanPackages($package); if ($installable) { goto OPuR7; } return back()->with("\x65\162\x72\157\x72", trans("\x6d\x65\163\163\141\x67\x65\x73\x2e\160\141\143\153\141\x67\x65\137\x6e\x6f\164\x5f\x66\x6f\165\156\x64", ["\x70\x61\143\x6b\x61\147\x65" => $package])); OPuR7: try { $installer = new PackageInstaller($request, $installable); $installer->install(); } catch (\Exception $e) { Log::error($e); $installer->uninstall(); Package::where("\163\154\165\x67", $package)->delete(); return back()->with("\x65\162\162\x6f\x72", $e->getMessage()); } Artisan::call("\x63\141\143\150\x65\72\x63\x6c\x65\x61\x72"); Artisan::call("\162\x6f\x75\164\x65\x3a\x63\x6c\x65\x61\162"); return back()->with("\163\165\x63\143\145\163\163", trans("\x6d\145\x73\x73\x61\147\x65\x73\56\160\141\x63\x6b\x61\x67\145\137\x69\156\x73\x74\141\154\154\x65\144\137\x73\x75\x63\x63\145\x73\163", ["\160\x61\143\153\141\x67\x65" => $package])); } public function uninstall(AdminOnlyAccessRequest $request, string $package) { if (!$this->isDemo()) { goto jkWiX; } return back()->with("\167\x61\x72\x6e\x69\156\x67", trans("\155\x65\163\x73\x61\x67\x65\x73\x2e\x64\145\x6d\157\x5f\x72\145\163\x74\162\151\143\164\151\x6f\x6e")); jkWiX: $registered = Package::where("\x73\154\165\147", $package)->firstOrFail(); $uninstallable = $this->scanPackages($package); try { $installer = new PackageInstaller($request, $uninstallable); if (!$installer->uninstall()) { goto tW6d8; } Artisan::call("\x63\x61\143\x68\x65\x3a\143\154\x65\141\x72"); Artisan::call("\162\157\165\x74\x65\72\143\x6c\x65\141\162"); if (!$registered->delete()) { goto fkce1; } return back()->with("\163\165\x63\143\x65\163\163", trans("\155\x65\x73\x73\x61\147\145\163\x2e\160\141\x63\x6b\141\x67\145\x5f\165\156\151\x6e\x73\x74\141\154\x6c\x65\x64\x5f\163\165\143\143\x65\x73\163", ["\160\141\x63\153\141\x67\145" => $package])); fkce1: tW6d8: } catch (\Exception $e) { Log::error($e); return back()->with("\145\x72\162\157\x72", $e->getMessage()); } return back()->with("\x65\162\x72\157\x72", trans("\x6d\x65\x73\163\141\147\x65\x73\56\x66\x61\151\154\x65\x64")); } public function activation(AdminOnlyAccessRequest $request, string $slug) { if (!$this->isDemo()) { goto Vvt9p; } return response("\x65\162\162\157\162", 444); Vvt9p: $package = Package::where("\x73\x6c\165\x67", $slug)->first(); if (!$package) { goto nuuet; } $package->active = !$package->active; $package->save(); Artisan::call("\x63\141\x63\150\145\x3a\143\154\145\x61\162"); return response("\x73\x75\x63\143\145\x73\163", 200); nuuet: if (!($unregistered = $this->scanPackages($slug))) { goto fJK2o; } Package::create($unregistered); fJK2o: return response("\x73\x75\x63\x63\145\163\163", 200); } public function updateConfig(Request $request) { if (!updateOptionTable($request)) { goto ymJTC; } return back()->with("\x73\165\x63\143\x65\163\163", trans("\155\145\163\163\x61\147\145\x73\56\160\141\x63\153\141\147\145\x5f\163\x65\164\x74\151\156\x67\163\137\x75\x70\144\141\x74\x65\144")); ymJTC: return back()->with("\x65\x72\162\x6f\162", trans("\x6d\x65\x73\163\141\x67\x65\x73\56\146\141\151\154\145\144")); } public function toggleConfig(Request $request, string $option) { if (!$this->isDemo()) { goto wJEJ6; } return response("\145\162\162\157\x72", 444); wJEJ6: $updated = DB::table("\x6f\x70\164\151\157\156\x73")->where("\x6f\160\164\151\x6f\156\137\156\141\155\145", $option)->update(["\157\160\164\151\157\156\x5f\166\x61\x6c\x75\145" => DB::raw("\x4e\117\x54\40\157\160\x74\151\157\156\x5f\x76\141\154\165\x65")]); if (!$updated) { goto fnIws; } Cache::forget($option); return response("\x73\165\x63\x63\145\163\x73", 200); fnIws: return response("\145\162\x72\x6f\x72", 405); } private function scanPackages(?string $slug = null) : array { $packages = []; foreach (glob(base_path("\x70\141\x63\153\x61\147\x65\163\x2f\x2a"), GLOB_ONLYDIR) as $dir) { if (!file_exists($manifest = $dir . "\x2f\155\141\156\x69\x66\145\x73\164\56\x6a\x73\157\x6e")) { goto H0diW; } $json = file_get_contents($manifest); if (!($json !== '')) { goto xhBkh; } $data = json_decode($json, true); if (!($data === null)) { goto P5srC; } throw new \Exception("\x49\x6e\x76\141\x6c\x69\x64\x20\x6d\x61\156\151\x66\x65\163\x74\x2e\x6a\163\x6f\156\x20\x66\x69\x6c\x65\x20\x61\x74\40\x5b{$dir}\135"); P5srC: $data["\160\x61\164\150"] = $dir; if (!($slug && $data["\x73\154\x75\x67"] == $slug)) { goto LdGw8; } return $data; LdGw8: $packages[] = $data; xhBkh: H0diW: Fh7Sr: } WqlPM: usort($packages, function ($x, $y) { return strcasecmp($x["\156\x61\155\x65"], $y["\x6e\141\x6d\145"]); }); return $packages; } private function isDemo() : bool { return config("\x61\x70\x70\x2e\144\x65\155\157") && !config("\141\160\160\56\144\145\142\165\147"); } }