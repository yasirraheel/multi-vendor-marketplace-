<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.14  |
    |              on 2025-05-28 15:20:04              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer\Helpers; class RequirementsChecker { private $_minPhpVersion = "\67\56\62\56\x30"; public function check(array $requirements) { $results = []; foreach ($requirements as $type => $requirement) { switch ($type) { case "\160\150\x70": foreach ($requirements[$type] as $requirement) { $results["\x72\x65\161\165\151\162\x65\x6d\145\x6e\x74\163"][$type][$requirement] = true; if (extension_loaded($requirement)) { goto SG4ex; } $results["\162\145\161\165\151\x72\145\155\145\x6e\164\x73"][$type][$requirement] = false; $results["\145\x72\162\x6f\162\163"] = true; SG4ex: h5KsN: } YJgcI: goto In_3U; case "\x61\x70\141\143\150\145": foreach ($requirements[$type] as $requirement) { if (!function_exists("\141\160\x61\x63\x68\x65\x5f\x67\x65\164\137\155\157\144\165\154\145\x73")) { goto XBgPv; } $results["\x72\145\161\x75\151\x72\145\x6d\x65\156\164\163"][$type][$requirement] = true; if (in_array($requirement, apache_get_modules())) { goto XMGf4; } $results["\x72\x65\x71\165\x69\162\145\155\145\156\x74\x73"][$type][$requirement] = false; $results["\145\162\x72\157\162\x73"] = true; XMGf4: XBgPv: k3dwu: } kkxD8: goto In_3U; } QpUN3: In_3U: jR1OC: } nqf89: return $results; } public function checkPHPversion(string $minPhpVersion = null, string $maxPhpVersion = null) { $currentPhpVersion = $this->getPhpVersionInfo(); $supported = false; if (!($minPhpVersion == null)) { goto Htytg; } $minPhpVersion = $this->getMinPhpVersion(); Htytg: if ($maxPhpVersion == null && version_compare($currentPhpVersion["\166\x65\x72\x73\151\157\156"], $minPhpVersion, "\76\75")) { goto Uxb56; } if (version_compare($currentPhpVersion["\x76\145\x72\163\151\x6f\x6e"], $minPhpVersion, "\x3e\x3d") && version_compare($currentPhpVersion["\166\145\162\163\151\x6f\156"], $maxPhpVersion, "\x3c\75")) { goto hadTT; } goto TTvc_; Uxb56: $supported = true; goto TTvc_; hadTT: $supported = true; TTvc_: $phpStatus = ["\146\x75\154\154" => $currentPhpVersion["\146\165\x6c\154"], "\143\x75\x72\x72\145\156\x74" => $currentPhpVersion["\x76\145\x72\163\x69\157\156"], "\155\151\x6e\151\x6d\x75\x6d" => $minPhpVersion, "\x6d\141\170\151\x6d\x75\x6d" => $maxPhpVersion, "\163\165\x70\x70\x6f\x72\164\145\144" => $supported]; return $phpStatus; } private static function getPhpVersionInfo() { $currentVersionFull = PHP_VERSION; preg_match("\43\x5e\134\144\x2b\50\134\56\134\x64\x2b\51\52\x23", $currentVersionFull, $filtered); $currentVersion = $filtered[0]; return ["\146\165\154\154" => $currentVersionFull, "\x76\x65\x72\x73\x69\157\156" => $currentVersion]; } protected function getMinPhpVersion() { return $this->_minPhpVersion; } }
